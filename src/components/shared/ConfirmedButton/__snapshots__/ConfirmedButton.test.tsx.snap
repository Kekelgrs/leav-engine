// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfirmedButton Snapshot test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConfirmedButton
    action={[Function]}
    confirmMessage="Test"
    i18n={
        Object {
            "language": "fr",
            "options": Object {
              "fallbackLng": Array [
                "en",
              ],
            },
          }
    }
    t={[Function]}
>
    <div />
</ConfirmedButton>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          onClick={[Function]}
/>,
        <Confirm
          cancelButton="admin.cancel"
          closeOnDimmerClick={false}
          closeOnDocumentClick={false}
          confirmButton="OK"
          content="Test"
          onCancel={[Function]}
          onConfirm={[Function]}
          open={false}
          size="small"
/>,
      ],
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "cancelButton": "admin.cancel",
          "closeOnDimmerClick": false,
          "closeOnDocumentClick": false,
          "confirmButton": "OK",
          "content": "Test",
          "onCancel": [Function],
          "onConfirm": [Function],
          "open": false,
          "size": "small",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            onClick={[Function]}
/>,
          <Confirm
            cancelButton="admin.cancel"
            closeOnDimmerClick={false}
            closeOnDocumentClick={false}
            confirmButton="OK"
            content="Test"
            onCancel={[Function]}
            onConfirm={[Function]}
            open={false}
            size="small"
/>,
        ],
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cancelButton": "admin.cancel",
            "closeOnDimmerClick": false,
            "closeOnDocumentClick": false,
            "confirmButton": "OK",
            "content": "Test",
            "onCancel": [Function],
            "onConfirm": [Function],
            "open": false,
            "size": "small",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
