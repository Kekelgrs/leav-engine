// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AttributeAdvancedLinkRepo createValue Should create a new advanced link value 1`] = `
"
                INSERT @value0
                    IN @@value1
                RETURN NEW"
`;

exports[`AttributeAdvancedLinkRepo createValue Should create a new advanced link value 2`] = `
Object {
  "@value1": "core_edge_values_links",
  "value0": Object {
    "_from": "test_lib/12345",
    "_to": "test_linked_lib/987654",
    "attribute": "test_adv_link_attr",
    "created_at": 400999999,
    "modified_at": 400999999,
    "version": Object {
      "my_tree": "test_lib/1",
    },
  },
}
`;

exports[`AttributeAdvancedLinkRepo getValueByID Should return value 1`] = `
"
                FOR linkedRecord, edge
                    IN 1 OUTBOUND @value0
                    @@value1
                    FILTER edge._key == @value2
                    FILTER edge.attribute == @value3
                    LIMIT 1
                    RETURN {linkedRecord, edge}
            "
`;

exports[`AttributeAdvancedLinkRepo getValueByID Should return value 2`] = `
Object {
  "@value1": "core_edge_values_links",
  "value0": "test_lib/987654",
  "value2": 112233,
  "value3": "test_adv_link_attr",
}
`;

exports[`AttributeAdvancedLinkRepo getValues Should return all values if forced 1`] = `
"
                FOR linkedRecord, edge
                    IN 1 OUTBOUND @value0
                    @@value1
                    FILTER edge.attribute == @value2
                 
                
                RETURN {linkedRecord, edge}
            "
`;

exports[`AttributeAdvancedLinkRepo getValues Should return only first value if not multiple attribute 1`] = `
"
                FOR linkedRecord, edge
                    IN 1 OUTBOUND @value0
                    @@value1
                    FILTER edge.attribute == @value2
                 
                LIMIT 1
                RETURN {linkedRecord, edge}
            "
`;

exports[`AttributeAdvancedLinkRepo getValues Should return only first value if not multiple attribute 2`] = `
Object {
  "@value1": "core_edge_values_links",
  "value0": "test_lib/123456",
  "value2": "test_adv_link_attr",
}
`;

exports[`AttributeAdvancedLinkRepo getValues Should return values filtered by version 1`] = `
"
                FOR linkedRecord, edge
                    IN 1 OUTBOUND @value0
                    @@value1
                    FILTER edge.attribute == @value2
                 FILTER edge.version == @value3 
                
                RETURN {linkedRecord, edge}
            "
`;

exports[`AttributeAdvancedLinkRepo getValues Should return values for advanced link attribute 1`] = `
"
                FOR linkedRecord, edge
                    IN 1 OUTBOUND @value0
                    @@value1
                    FILTER edge.attribute == @value2
                 
                
                RETURN {linkedRecord, edge}
            "
`;

exports[`AttributeAdvancedLinkRepo getValues Should return values for advanced link attribute 2`] = `
Object {
  "@value1": "core_edge_values_links",
  "value0": "test_lib/123456",
  "value2": "test_adv_link_attr",
}
`;

exports[`AttributeAdvancedLinkRepo updateValue Should update a advanced link value 1`] = `
"
                UPDATE @value0
                    WITH @value1
                    IN @@value2
                RETURN NEW"
`;

exports[`AttributeAdvancedLinkRepo updateValue Should update a advanced link value 2`] = `
Object {
  "@value2": "core_edge_values_links",
  "value0": Object {
    "_key": 987654,
  },
  "value1": Object {
    "_from": "test_lib/12345",
    "_to": "test_linked_lib/987654",
    "attribute": "test_adv_link_attr",
    "modified_at": 400999999,
    "version": Object {
      "my_tree": "test_lib/1",
    },
  },
}
`;
